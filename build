#!/bin/sh

#Current working directory
cwd=$(dirname $(realpath $0))

#Valid flags
flags=(
    '-t|--target_arch'
    '-h|--help')

#Libchromiumcontent
libchromiumcontent_bootstrap() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Bootstrap'
}
libchromiumcontent_build() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Build'
}
libchromiumcontent_dist() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent CreateDist'
}

#Electron
electron_bootstrap() {
    cd $cwd/electron
    echo 'Electron Bootstrap'
}
electron_build() {
    cd $cwd/electron
    echo 'Electron Build'
}
electron_dist() {
    cd $cwd/electron
    echo 'Electron CreateDist'
}

# Main
main() {
    #Available FNs
    funcs=$(typeset -f | awk '/ \(\) $/ && !/^(main) / {print $1}');

    #Update submodules if this is the first time running the script
    if [[ $(find ./electron/ -maxdepth 1 -type d | wc -l) == 1 ]]; then
        git submodule update --init --recursive
    fi
    
    #Load ./utils/*.sh helpers
    for f in $(find ${cwd}/utils -name '*.sh'); do
        . $f
    done

    #Parse Command Line Args
    if [[ $@ ]]; then
        eval $(argsToArray $@);
    fi

    #Get system architecture
    arch=$(archParser $(getArg --target_arch))

    #Help Menu || Show if arch is un-detectable
    if [[ $@ =~ -h|--help || ! $arch ]]; then
        if [[ ! $arch ]]; then
            echo "Unable to detect architecture type. Please refer to the help menu:";
            echo "----";
        fi

        helpMenu $funcs;
        return;
    fi

    #Make sure we use Python 2 - ugh
    if [[ ! $(python --version) =~ 2 ]]; then
        echo 'need set up python 2'
    fi

    #Is Command Function
    if [[ $1 && $funcs =~ $1 ]]; then
        $1
    #No Command, execute all
    else
        #Bootstrap, patch and build Libchromiumcontent
        libchromiumcontent_bootstrap
        libchromiumcontent_build
        libchromiumcontent_dist

        #Bootstrap, patch and build Electron
        electron_bootstrap
        electron_build
        electron_dist
    fi
}

main $@
