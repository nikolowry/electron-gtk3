#!/bin/sh

#Current working directory
cwd=$(dirname $(realpath $0))

#Valid flags
flags=(
    "-t|--target_arch"
    "-h|--help"
)

#Libchromiumcontent
libchromiumcontent_bootstrap() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Bootstrap'
}
libchromiumcontent_build() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Build'
}
libchromiumcontent_dist() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent CreateDist'
}

#Electron
electron_bootstrap() {
    cd $cwd/electron
    echo 'Electron Bootstrap'
}
electron_build() {
    cd $cwd/electron/vendor/brightray/

    cd $cwd/electron
    echo 'Electron Build'
}
electron_dist() {
    cd $cwd/electron
    echo 'Electron CreateDist'
}

# Main
main() {
    #Available FNs
    funcs=$(typeset -f | awk '/ \(\) $/ && !/^(main) / {print $1}')

    #Update local Electron and it's submodules
    git submodule update --init --recursive

    #Load ./utils/*.sh helpers
    for f in $(find ${cwd}/utils -name '*.sh'); do
        . $f
    done

    #Parse Command Line Args
    if [[ $@ ]]; then
        eval $(argsToArray $@)
    fi

    if [[ $@ =~ -h|--help ]]; then
        #Help Menu
        help $funcs
    else
        #Get arch type if passed
        arch=$(getArg --target_arch)

        #Validate arch type
        if [[ $arch ]]; then
            echo $arch
        fi

        #Is Command Function
        if [[ $1 && $funcs =~ $1 ]]; then
            $1
        #No Command, execute all
        else
            #Bootstrap, patch and build Libchromiumcontent
            libchromiumcontent_bootstrap
            libchromiumcontent_build
            libchromiumcontent_dist

            #Bootstrap, patch and build Electron
            electron_bootstrap
            electron_build
            electron_dist
        fi
    fi
}

main $@
