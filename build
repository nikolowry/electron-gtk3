#!/bin/sh

#Current working directory
cwd=$(dirname $(realpath $0))

#Valid flags
flags=(
    '-t|--target_arch'
    '-h|--help')

#Libchromiumcontent
libchromiumcontent_bootstrap() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Bootstrap'
}
libchromiumcontent_build() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent Build'
}
libchromiumcontent_dist() {
    cd $cwd/electron/vendor/brightray/vendor/libchromiumcontent
    echo 'Libchromiumcontent CreateDist'
}

#Electron
electron_bootstrap() {
    cd $cwd/electron
    echo 'Electron Bootstrap'
}
electron_build() {
    cd $cwd/electron/vendor/brightray/

    cd $cwd/electron
    echo 'Electron Build'
}
electron_dist() {
    cd $cwd/electron
    echo 'Electron CreateDist'
}

# Main
main() {
    #Available FNs
    funcs=$(typeset -f | awk '/ \(\) $/ && !/^(main) / {print $1}')

    #Update local Electron and it's submodules
    git submodule update --init --recursive

    #Load ./utils/*.sh helpers
    for f in $(find ${cwd}/utils -name '*.sh'); do
        . $f
    done

    #Parse Command Line Args
    if [[ $@ ]]; then
        eval $(argsToArray $@);
    fi

    #Help Menu
    if [[ $@ =~ -h|--help ]]; then
        help $funcs;
        return;
    fi

    #Get arch type
    archArg=$(getArg --target_arch);
    arch64='x64 x86_64 amd64';
    arch32='ia32 i686';

    if [[ ! $arch64 =~ $archArg && ! $arch32 =~ $archArg ]]; then
        archArg=$(uname -m);
    fi

    #Validate arch type
    if [[ $arch64 =~ $archArg ]]; then
        arch='x64';
    elif [[ $arch32  =~ $archArg ]]; then
        arch='ia32';
    fi

    #Exit if no arch detected
    if [[ ! $arch ]]; then
        echo "Unable to detect architecture type"
        return
    fi

    #Is Command Function
    if [[ $1 && $funcs =~ $1 ]]; then
        $1
    #No Command, execute all
    else
        #Bootstrap, patch and build Libchromiumcontent
        libchromiumcontent_bootstrap
        libchromiumcontent_build
        libchromiumcontent_dist

        #Bootstrap, patch and build Electron
        electron_bootstrap
        electron_build
        electron_dist
    fi
}

main $@
